{"version":3,"sources":["../../../src/raydium/liquidity/type.ts"],"sourcesContent":["import { PublicKey } from \"@solana/web3.js\";\nimport { ApiV3PoolInfoStandardItem, AmmV4Keys, AmmV5Keys } from \"@/api/type\";\nimport { TxVersion } from \"@/common/txTool/txType\";\nimport { BigNumberish } from \"@/common/bignumber\";\nimport BN from \"bn.js\";\nimport Decimal from \"decimal.js-light\";\nimport { ComputeBudgetConfig } from \"@/raydium/type\";\n\nexport type LiquiditySide = \"a\" | \"b\";\nexport type AmountSide = \"base\" | \"quote\";\n\nexport interface AddLiquidityParams<T = TxVersion.LEGACY> {\n  poolInfo: ApiV3PoolInfoStandardItem;\n  payer?: PublicKey;\n  amountInA: string | Decimal | BN;\n  amountInB: string | Decimal | BN;\n  fixedSide: LiquiditySide;\n  config?: {\n    bypassAssociatedCheck?: boolean;\n    checkCreateATAOwner?: boolean;\n  };\n  txVersion?: T;\n}\n\nexport interface RemoveParams<T = TxVersion.LEGACY> {\n  poolInfo: ApiV3PoolInfoStandardItem;\n  payer?: PublicKey;\n  amountIn: BN;\n  config?: {\n    bypassAssociatedCheck?: boolean;\n    checkCreateATAOwner?: boolean;\n  };\n  txVersion?: T;\n}\n\nexport interface LiquidityUserKeys {\n  baseTokenAccount: PublicKey;\n  quoteTokenAccount: PublicKey;\n  lpTokenAccount: PublicKey;\n  owner: PublicKey;\n}\n\nexport interface LiquidityAddInstructionParams {\n  poolInfo: ApiV3PoolInfoStandardItem;\n  poolKeys: AmmV4Keys | AmmV5Keys;\n  userKeys: LiquidityUserKeys;\n  baseAmountIn: BigNumberish;\n  quoteAmountIn: BigNumberish;\n  fixedSide: AmountSide;\n}\n\nexport interface RemoveLiquidityInstruction {\n  poolInfo: ApiV3PoolInfoStandardItem;\n  poolKeys: AmmV4Keys | AmmV5Keys;\n  userKeys: LiquidityUserKeys;\n  amountIn: BigNumberish;\n}\n\nexport interface LiquidityPoolKeys {\n  // base\n  id: PublicKey;\n  baseMint: PublicKey;\n  quoteMint: PublicKey;\n  lpMint: PublicKey;\n  baseDecimals: number;\n  quoteDecimals: number;\n  lpDecimals: number;\n  // version\n  version: 4 | 5;\n  programId: PublicKey;\n  // keys\n  authority: PublicKey;\n  nonce: number;\n  baseVault: PublicKey;\n  quoteVault: PublicKey;\n  lpVault: PublicKey;\n  openOrders: PublicKey;\n  targetOrders: PublicKey;\n  withdrawQueue: PublicKey;\n  // market version\n  marketVersion: 3;\n  marketProgramId: PublicKey;\n  // market keys\n  marketId: PublicKey;\n  marketAuthority: PublicKey;\n  lookupTableAccount: PublicKey;\n  configId: PublicKey;\n}\n\nexport interface CreatePoolParam<T> {\n  programId: PublicKey;\n  marketInfo: {\n    marketId: PublicKey;\n    programId: PublicKey;\n  };\n  baseMintInfo: {\n    mint: PublicKey;\n    decimals: number;\n  };\n  quoteMintInfo: {\n    mint: PublicKey;\n    decimals: number;\n  };\n\n  baseAmount: BN;\n  quoteAmount: BN;\n  startTime: BN;\n\n  ownerInfo: {\n    feePayer?: PublicKey;\n    useSOLBalance?: boolean; // if has WSOL mint\n  };\n  associatedOnly: boolean;\n  checkCreateATAOwner?: boolean;\n  tokenProgram?: PublicKey;\n  feeDestinationId: PublicKey;\n  computeBudgetConfig?: ComputeBudgetConfig;\n  txVersion?: T;\n}\n\nexport interface CreatePoolAddress {\n  programId: PublicKey;\n  ammId: PublicKey;\n  ammAuthority: PublicKey;\n  ammOpenOrders: PublicKey;\n  lpMint: PublicKey;\n  coinMint: PublicKey;\n  pcMint: PublicKey;\n  coinVault: PublicKey;\n  pcVault: PublicKey;\n  withdrawQueue: PublicKey;\n  ammTargetOrders: PublicKey;\n  poolTempLp: PublicKey;\n  marketProgramId: PublicKey;\n  marketId: PublicKey;\n  ammConfigId: PublicKey;\n  feeDestinationId: PublicKey;\n}\n\nexport interface SwapFixedInInstructionParamsV4 {\n  poolKeys: AmmV4Keys | AmmV5Keys;\n  userKeys: {\n    tokenAccountIn: PublicKey;\n    tokenAccountOut: PublicKey;\n    owner: PublicKey;\n  };\n  amountIn: BigNumberish;\n  minAmountOut: BigNumberish;\n}\n\nexport interface SwapFixedOutInstructionParamsV4 {\n  poolKeys: AmmV4Keys | AmmV5Keys;\n  userKeys: {\n    tokenAccountIn: PublicKey;\n    tokenAccountOut: PublicKey;\n    owner: PublicKey;\n  };\n  // maximum amount in\n  maxAmountIn: BigNumberish;\n  amountOut: BigNumberish;\n}\n\nexport type SwapSide = \"in\" | \"out\";\nexport interface SwapInstructionParams {\n  version: number;\n  poolKeys: AmmV4Keys | AmmV5Keys;\n  userKeys: {\n    tokenAccountIn: PublicKey;\n    tokenAccountOut: PublicKey;\n    owner: PublicKey;\n  };\n  amountIn: BigNumberish;\n  amountOut: BigNumberish;\n  fixedSide: SwapSide;\n}\n\nexport interface InitPoolInstructionParamsV4 {\n  poolKeys: AmmV4Keys | AmmV5Keys;\n  userKeys: {\n    lpTokenAccount: PublicKey;\n    payer: PublicKey;\n  };\n  startTime: BigNumberish;\n}\n"],"mappings":"kWAAA","names":[]}